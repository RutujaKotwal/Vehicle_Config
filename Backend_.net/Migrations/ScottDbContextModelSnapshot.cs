// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vehicle_Configurator.DbRepos;

#nullable disable

namespace VehicleConfigurator.Migrations
{
    [DbContext(typeof(ScottDbContext))]
    partial class ScottDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.AlternateComponentMaster", b =>
                {
                    b.Property<int>("AltId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("alt_id");

                    b.Property<int>("AltCompId")
                        .HasColumnType("int")
                        .HasColumnName("alt_comp_id");

                    b.Property<int>("CompId")
                        .HasColumnType("int")
                        .HasColumnName("comp_id");

                    b.Property<double>("DeltaPrice")
                        .HasColumnType("double")
                        .HasColumnName("delta_price");

                    b.Property<int>("MdlId")
                        .HasColumnType("int")
                        .HasColumnName("mdl_id");

                    b.HasKey("AltId")
                        .HasName("PRIMARY");

                    b.ToTable("alternate_component_master", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.ComponentMaster", b =>
                {
                    b.Property<int>("CompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comp_id");

                    b.Property<string>("CompName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comp_name");

                    b.Property<string>("SubType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sub_type");

                    b.HasKey("CompId")
                        .HasName("PRIMARY");

                    b.ToTable("component_master", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.Invoice", b =>
                {
                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inv_id");

                    b.Property<string>("Date")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("date");

                    b.Property<int>("MdlId")
                        .HasColumnType("int")
                        .HasColumnName("mdl_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int")
                        .HasColumnName("total_price");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("InvId")
                        .HasName("PRIMARY");

                    b.ToTable("invoice", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.MfgMaster", b =>
                {
                    b.Property<int>("MfgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mfg_id");

                    b.Property<string>("MfgName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mfg_name");

                    b.Property<int?>("SegId")
                        .HasColumnType("int")
                        .HasColumnName("seg_id");

                    b.HasKey("MfgId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SegId" }, "FKok5qd64lq1asv75hpfgpwhdyq");

                    b.ToTable("mfg_master", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.ModelMaster", b =>
                {
                    b.Property<int>("MdlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mdl_id");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_path");

                    b.Property<string>("MdlName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mdl_name");

                    b.Property<int?>("MfgId")
                        .HasColumnType("int")
                        .HasColumnName("mfg_id");

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("SegId")
                        .HasColumnType("int")
                        .HasColumnName("seg_id");

                    b.HasKey("MdlId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MfgId" }, "FKacbx0rmpiqwgiisi06lsfcw6f");

                    b.HasIndex(new[] { "SegId" }, "FKtpmev85psi1n73w058nmykixb");

                    b.ToTable("model_master", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.SegmentMaster", b =>
                {
                    b.Property<int>("SegId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seg_id");

                    b.Property<string>("SegName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("seg_name");

                    b.HasKey("SegId")
                        .HasName("PRIMARY");

                    b.ToTable("segment_master", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("AuthCell")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("auth_cell");

                    b.Property<string>("AuthTel")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("auth_tel");

                    b.Property<string>("CompName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comp_name");

                    b.Property<string>("CompStNo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comp_st_no");

                    b.Property<string>("Designation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("designation");

                    b.Property<string>("Emailid")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("emailid");

                    b.Property<string>("Holding")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("holding");

                    b.Property<string>("NameAuthPerson")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name_auth_person");

                    b.Property<string>("Pan")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pan");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Telephone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telephone");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.Property<string>("VatNo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vat_no");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.VehicleDetail", b =>
                {
                    b.Property<int>("ConfiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("confi_id");

                    b.Property<int?>("CompId")
                        .HasColumnType("int")
                        .HasColumnName("comp_id");

                    b.Property<string>("CompType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comp_type");

                    b.Property<string>("IsConfigurable")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("is_configurable");

                    b.Property<int?>("MdlId")
                        .HasColumnType("int")
                        .HasColumnName("mdl_id");

                    b.HasKey("ConfiId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MdlId" }, "FK7ef69m6cku8vfvvmxuvu4nys3");

                    b.HasIndex(new[] { "CompId" }, "FKhih0q8yg3skwicdw9e0kigiti");

                    b.ToTable("vehicle_detail", (string)null);
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.MfgMaster", b =>
                {
                    b.HasOne("Vehicle_Configurator.DbRepos.SegmentMaster", "Seg")
                        .WithMany("MfgMasters")
                        .HasForeignKey("SegId")
                        .HasConstraintName("FKok5qd64lq1asv75hpfgpwhdyq");

                    b.Navigation("Seg");
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.ModelMaster", b =>
                {
                    b.HasOne("Vehicle_Configurator.DbRepos.MfgMaster", "Mfg")
                        .WithMany("ModelMasters")
                        .HasForeignKey("MfgId")
                        .HasConstraintName("FKacbx0rmpiqwgiisi06lsfcw6f");

                    b.HasOne("Vehicle_Configurator.DbRepos.SegmentMaster", "Seg")
                        .WithMany("ModelMasters")
                        .HasForeignKey("SegId")
                        .HasConstraintName("FKtpmev85psi1n73w058nmykixb");

                    b.Navigation("Mfg");

                    b.Navigation("Seg");
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.VehicleDetail", b =>
                {
                    b.HasOne("Vehicle_Configurator.DbRepos.ComponentMaster", "Comp")
                        .WithMany("VehicleDetails")
                        .HasForeignKey("CompId")
                        .HasConstraintName("FKhih0q8yg3skwicdw9e0kigiti");

                    b.HasOne("Vehicle_Configurator.DbRepos.ModelMaster", "Mdl")
                        .WithMany("VehicleDetails")
                        .HasForeignKey("MdlId")
                        .HasConstraintName("FK7ef69m6cku8vfvvmxuvu4nys3");

                    b.Navigation("Comp");

                    b.Navigation("Mdl");
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.ComponentMaster", b =>
                {
                    b.Navigation("VehicleDetails");
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.MfgMaster", b =>
                {
                    b.Navigation("ModelMasters");
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.ModelMaster", b =>
                {
                    b.Navigation("VehicleDetails");
                });

            modelBuilder.Entity("Vehicle_Configurator.DbRepos.SegmentMaster", b =>
                {
                    b.Navigation("MfgMasters");

                    b.Navigation("ModelMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
